import React, { useState } from 'react';
import { 
  Eye, 
  Download, 
  Mail, 
  Calendar, 
  User,
  FileText,
  Trash2,
  Loader2
} from 'lucide-react';
import { Button } from '../';
import { formatDate, getDocumentTypeLabel, getDocumentTypeIcon } from './utils';

const DocumentCard = ({ 
  document, 
  onView, 
  onDownload, 
  onSendEmail, 
  onDelete,
  showActions = true 
}) => {
  const [downloading, setDownloading] = useState(false);

  const handleView = () => {
    if (onView) onView(document);
  };

  const handleDownload = async () => {
    if (onDownload) {
      setDownloading(true);
      try {
        await onDownload(document);
      } finally {
        setDownloading(false);
      }
    }
  };

  const handleSendEmail = () => {
    if (onSendEmail) onSendEmail(document);
  };

  const handleDelete = () => {
    if (onDelete) onDelete(document);
  };

  return (
    <div className="bg-white border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
      <div className="flex items-start justify-between">
        <div className="flex-1">
          <div className="flex items-center mb-2">
            <span className="text-2xl mr-2">
              {getDocumentTypeIcon(document.document_type)}
            </span>
            <h3 className="text-lg font-semibold text-gray-900">
              {document.title}
            </h3>
          </div>
          
          <div className="space-y-1 text-sm text-gray-600">
            <div className="flex items-center">
              <User className="w-4 h-4 mr-2" />
              <span>{document.employee_name}</span>
            </div>
            
            <div className="flex items-center">
              <FileText className="w-4 h-4 mr-2" />
              <span>{getDocumentTypeLabel(document.document_type)}</span>
            </div>
            
            <div className="flex items-center">
              <Calendar className="w-4 h-4 mr-2" />
              <span>{formatDate(document.generated_at)}</span>
            </div>
            
            {document.generated_by_name && (
              <div className="flex items-center">
                <User className="w-4 h-4 mr-2" />
                <span>Generated by: {document.generated_by_name}</span>
              </div>
            )}
          </div>

          {/* Status Indicators */}
          <div className="flex items-center mt-3 space-x-2">
            {document.is_sent && (
              <span className="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800">
                <Mail className="w-3 h-3 mr-1" />
                Sent
              </span>
            )}
            
            {document.pdf_file && (
              <span className="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                <Download className="w-3 h-3 mr-1" />
                PDF Available
              </span>
            )}
          </div>
        </div>

        {/* Action Buttons */}
        {showActions && (
          <div className="flex flex-col space-y-2 ml-4">
            <Button
              onClick={handleView}
              className="flex items-center px-3 py-1 text-sm bg-blue-100 text-blue-700 hover:bg-blue-200 rounded"
            >
              <Eye className="w-4 h-4 mr-1" />
              View
            </Button>
            
            {document.pdf_file && (
              <Button
                onClick={handleDownload}
                disabled={downloading}
                className="flex items-center px-3 py-1 text-sm bg-green-100 text-green-700 hover:bg-green-200 rounded disabled:opacity-50 disabled:cursor-not-allowed"
              >
                {downloading ? (
                  <Loader2 className="w-4 h-4 mr-1 animate-spin" />
                ) : (
                  <Download className="w-4 h-4 mr-1" />
                )}
                {downloading ? 'Downloading...' : 'Download'}
              </Button>
            )}
            
            {!document.is_sent && (
              <Button
                onClick={handleSendEmail}
                className="flex items-center px-3 py-1 text-sm bg-purple-100 text-purple-700 hover:bg-purple-200 rounded"
              >
                <Mail className="w-4 h-4 mr-1" />
                Send Email
              </Button>
            )}
            
            <Button
              onClick={handleDelete}
              className="flex items-center px-3 py-1 text-sm bg-red-100 text-red-700 hover:bg-red-200 rounded"
            >
              <Trash2 className="w-4 h-4 mr-1" />
              Delete
            </Button>
          </div>
        )}
      </div>
    </div>
  );
};

export default DocumentCard;
